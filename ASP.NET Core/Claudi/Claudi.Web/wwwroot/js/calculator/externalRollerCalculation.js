function calculate(model, color , width, height) {
	let models = ["PVC", "AL H-39", "AL H-39R"];
	let colors = ["Бял", "Кафяв"];
	let colorCode = 0;	//default color
	let modelCode = 0; // default model
	let totalPrice = 0;
	let errMSG = "Зададените размери са извън позволените габарити/площ  на щората."

	///////////AL-H39R/////////////

	let alH39 = [
		[104, 112, 121, 130, 140, 149, 159, 166, 176, 187, 197, 206, 214, 224, 233, 242, 253, 263, 271, 281, 290, 300, 307, 320, 328, 337],
		[110, 120, 130, 140, 150, 160, 170, 180, 191, 202, 213, 223, 233, 242, 252, 261, 274, 284, 294, 304, 313, 325, 335, 347, 357, 367],
		[118, 128, 139, 150, 161, 171, 182, 193, 203, 217, 228, 238, 249, 260, 271, 281, 295, 306, 316, 327, 338, 348, 359, 374, 383, 395],
		[125, 136, 147, 160, 171, 182, 195, 206, 217, 231, 244, 255, 266, 279, 290, 301, 316, 327, 338, 352, 363, 374, 387, 400, 411, 423],
		[131, 143, 155, 168, 181, 193, 206, 218, 231, 247, 259, 271, 284, 296, 310, 322, 336, 348, 361, 374, 387, 399, 411, 426, 440, 452],
		[137, 151, 165, 177, 192, 204, 218, 233, 245, 260, 274, 289, 301, 315, 327, 342, 357, 371, 383, 398, 411, 424, 439, 453, 467, 480],
		[144, 160, 173, 187, 202, 216, 231, 245, 259, 276, 290, 304, 320, 333, 347, 361, 378, 392, 406, 421, 435, 450, 463, 480, 494, 509],
		[151, 166, 182, 197, 213, 227, 242, 258, 273, 290, 305, 321, 336, 352, 367, 380, 399, 414, 430, 444, 460, 475, 490, 507, 522, 538],
		[159, 175, 191, 207, 223, 238, 255, 270, 287, 305, 321, 337, 353, 369, 385, 400, 420, 435, 452, 467, 483, 499, 515, 534, 550, 565],
		[173, 192, 210, 227, 245, 261, 280, 299, 315, 336, 353, 371, 389, 406, 424, 442, 462, 480, 497, 515, 533, 550, 569, 587, 606, 624],
		[181, 198, 218, 237, 255, 273, 292, 311, 328, 350, 369, 388, 406, 424, 444, 462, 483, 501, 519, 539, 557, 575, 593, 615, 634, 652],
		[187, 207, 227, 247, 266, 285, 304, 323, 343, 365, 385, 404, 423, 442, 462, 482, 504, 523, 541, 561, 581, 601, 620, 642, 660, 680],
		[195, 216, 235, 256, 276, 296, 316, 337, 357, 379, 400, 420, 441, 461, 482, 501, 525, 544, 565, 585, 605, 626, 645, 669, 689, 710],
		[202, 223, 244, 264, 285, 307, 328, 350, 371, 395, 415, 436, 457, 478, 499, 520, 544, 565, 587, 608, 630, 651, 672, 695, 716, 737],
		[208, 231, 252, 274, 296, 320, 341, 363, 385, 409, 431, 453, 475, 497, 519, 541, 565, 587, 611, 631, 653, 676, 696, 722, 745, 766],
		[216, 238, 261, 284, 306, 331, 353, 375, 399, 424, 446, 468, 493, 515, 538, 561, 586, 608, 633, 655, 678, 701, 724, 748, 771, 795],
		[223, 247, 270, 294, 317, 342, 365, 389, 411, 439, 462, 486, 509, 533, 557, 581, 607, 631, 655, 679, 703, 726, 750, 776, 799, 823],
		[240, 268, 294, 320, 346, 372, 399, 425, 451, 480, 507, 532, 559, 585, 612, 637, 667, 693, 719, 745, 771, 798, 823, 852, 879, 906],
		[248, 276, 302, 328, 357, 383, 410, 439, 465, 494, 522, 549, 575, 603, 630, 658, 688, 714, 742, 768, 795, 823, 850, 879, 907, 933],
		[255, 283, 311, 338, 367, 395, 423, 451, 478, 509, 538, 565, 593, 622, 649, 678, 709, 736, 764, 792, 820, 846, 875, 0, 0, 0],
		[261, 291, 320, 348, 377, 406, 435, 463, 493, 523, 553, 582, 611, 639, 668, 696, 727, 757, 787, 814, 844, 872, 901, 0, 0, 0],
		[269, 299, 327, 358, 388, 417, 446, 477, 507, 539, 569, 597, 628, 658, 688, 716, 748, 778, 809, 839, 867, 0, 0, 0, 0, 0],
		[276, 306, 337, 367, 398, 429, 460, 490, 520, 553, 584, 615, 645, 676, 706, 736, 770, 800, 831, 862, 892, 0, 0, 0, 0, 0],
		[283, 313, 346, 377, 409, 440, 472, 503, 534, 569, 599, 631, 662, 694, 725, 757, 791, 821, 854, 0, 0, 0, 0, 0, 0, 0],
		[290, 322, 354, 387, 419, 451, 483, 515, 548, 582, 615, 647, 680, 712, 745, 777, 812, 844, 876, 0, 0, 0, 0, 0, 0, 0],
		[296, 328, 363, 396, 429, 462, 496, 529, 561, 597, 630, 663, 696, 731, 763, 797, 831, 865, 898, 0, 0, 0, 0, 0, 0, 0]
	];

	///////////AL-H39R/////////////

	let alH39r = [
		[130, 140, 150, 161, 171, 181, 191, 201, 210, 223, 233, 242, 252, 261, 271, 281, 294, 304, 313, 323, 333, 343, 353, 365, 375, 385],
		[137, 149, 160, 170, 181, 192, 202, 213, 224, 237, 248, 258, 269, 280, 290, 301, 315, 325, 336, 347, 357, 368, 379, 392, 403, 414],
		[144, 156, 168, 180, 191, 203, 214, 225, 238, 252, 263, 274, 287, 299, 310, 321, 335, 347, 358, 369, 382, 393, 404, 419, 431, 442],
		[151, 164, 176, 188, 202, 214, 227, 238, 250, 266, 279, 291, 304, 316, 328, 342, 356, 368, 380, 393, 406, 419, 431, 445, 457, 471],
		[159, 172, 185, 198, 212, 225, 238, 252, 264, 281, 294, 307, 321, 335, 347, 361, 377, 390, 403, 417, 430, 444, 456, 473, 486, 499],
		[165, 180, 193, 207, 223, 237, 250, 264, 279, 295, 310, 323, 338, 353, 367, 380, 398, 411, 425, 440, 455, 468, 483, 499, 514, 528],
		[172, 187, 202, 217, 233, 248, 261, 277, 292, 311, 325, 341, 356, 371, 385, 400, 419, 432, 447, 463, 478, 494, 508, 527, 541, 555],
		[180, 195, 212, 227, 242, 259, 274, 291, 306, 325, 341, 357, 372, 389, 404, 420, 440, 455, 471, 487, 503, 518, 534, 553, 569, 585],
		[186, 203, 219, 237, 253, 270, 287, 304, 321, 341, 357, 374, 390, 408, 424, 441, 460, 476, 493, 509, 527, 543, 560, 580, 596, 613],
		[193, 210, 228, 247, 263, 281, 299, 316, 335, 354, 372, 389, 408, 425, 442, 461, 480, 498, 515, 533, 551, 569, 586, 606, 624, 642],
		[201, 218, 237, 255, 274, 292, 311, 328, 347, 369, 388, 406, 424, 442, 462, 480, 501, 519, 538, 557, 575, 593, 612, 633, 652, 670],
		[207, 225, 245, 264, 284, 304, 323, 343, 361, 383, 403, 423, 442, 461, 480, 499, 522, 541, 561, 580, 599, 618, 638, 660, 679, 699],
		[214, 234, 253, 274, 294, 315, 335, 356, 375, 399, 419, 440, 460, 478, 499, 519, 543, 563, 584, 603, 624, 644, 663, 688, 706, 727],
		[219, 242, 263, 284, 305, 326, 347, 368, 389, 413, 434, 455, 476, 497, 518, 540, 563, 585, 606, 627, 648, 669, 690, 714, 735, 756],
		[227, 249, 271, 294, 315, 337, 359, 380, 403, 429, 450, 472, 494, 515, 538, 560, 584, 606, 628, 649, 672, 694, 716, 741, 763, 784],
		[247, 271, 295, 320, 344, 368, 393, 417, 441, 468, 493, 517, 541, 565, 590, 615, 641, 665, 690, 714, 739, 763, 787, 813, 839, 862],
		[253, 279, 304, 328, 354, 379, 404, 430, 455, 483, 508, 533, 559, 584, 608, 634, 662, 688, 712, 737, 763, 788, 813, 841, 866, 0],
		[260, 287, 312, 338, 365, 390, 417, 442, 468, 497, 523, 550, 575, 602, 628, 653, 683, 709, 735, 760, 787, 813, 839, 867, 0, 0],
		[268, 294, 322, 348, 375, 401, 429, 456, 483, 512, 539, 565, 593, 620, 647, 673, 703, 731, 757, 784, 810, 839, 0, 0, 0, 0],
		[274, 302, 331, 358, 385, 413, 441, 468, 497, 527, 554, 582, 611, 638, 667, 694, 724, 752, 779, 808, 835, 0, 0, 0, 0, 0],
		[281, 310, 338, 367, 396, 424, 453, 482, 511, 541, 570, 599, 627, 657, 684, 714, 745, 774, 802, 830, 0, 0, 0, 0, 0, 0],
		[289, 317, 347, 377, 406, 435, 465, 494, 525, 555, 586, 616, 645, 674, 704, 733, 766, 795, 824, 0, 0, 0, 0, 0, 0, 0],
		[295, 325, 356, 387, 417, 446, 477, 508, 538, 571, 602, 631, 662, 693, 722, 753, 787, 815, 0, 0, 0, 0, 0, 0, 0, 0],
		[302, 333, 364, 396, 426, 457, 490, 520, 551, 585, 617, 648, 679, 711, 742, 773, 808, 839, 0, 0, 0, 0, 0, 0, 0, 0],
		[310, 342, 374, 404, 436, 468, 501, 533, 565, 601, 633, 665, 696, 730, 761, 793, 828, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[316, 348, 382, 414, 447, 480, 514, 545, 580, 615, 648, 681, 714, 747, 779, 813, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
	];

	///////////PVC2/////////////

	let pvcOutsideRoller = [
		[95, 102, 110, 118, 125, 133, 140, 147, 155, 166, 173, 181, 188, 196, 203, 212, 223, 229, 237, 245],
		[99, 108, 116, 125, 133, 140, 149, 156, 165, 176, 185, 192, 201, 208, 217, 224, 237, 244, 252, 260],
		[105, 114, 121, 131, 140, 149, 156, 165, 173, 186, 195, 203, 213, 222, 229, 238, 250, 259, 268, 276],
		[110, 119, 129, 137, 147, 155, 165, 175, 183, 196, 206, 214, 224, 233, 242, 252, 264, 273, 283, 291],
		[115, 125, 134, 144, 154, 164, 173, 183, 193, 206, 216, 225, 235, 245, 255, 264, 279, 289, 299, 307],
		[120, 130, 141, 151, 161, 172, 182, 192, 203, 217, 227, 237, 248, 258, 268, 279, 292, 302, 312, 323],
		[125, 136, 147, 159, 170, 180, 191, 202, 213, 227, 238, 248, 259, 270, 281, 291, 306, 316, 327, 338],
		[130, 141, 152, 165, 176, 187, 198, 210, 222, 237, 248, 259, 270, 283, 294, 305, 321, 332, 343, 354],
		[136, 147, 160, 171, 183, 195, 207, 219, 231, 247, 259, 270, 283, 294, 306, 320, 335, 346, 358, 369],
		[149, 162, 175, 188, 202, 216, 228, 242, 255, 271, 285, 299, 312, 325, 338, 352, 368, 382, 395, 409],
		[154, 168, 182, 195, 208, 223, 237, 250, 264, 281, 295, 310, 323, 337, 352, 365, 382, 396, 0, 0],
		[159, 173, 187, 202, 217, 231, 245, 259, 274, 292, 306, 321, 335, 350, 364, 378, 396, 0, 0, 0],
		[164, 180, 193, 208, 224, 238, 253, 269, 284, 302, 316, 332, 347, 363, 377, 392, 0, 0, 0, 0],
		[170, 185, 201, 216, 231, 247, 261, 277, 292, 312, 327, 343, 358, 374, 0, 0, 0, 0, 0, 0],
		[173, 191, 206, 223, 238, 255, 270, 287, 302, 322, 338, 354, 371, 0, 0, 0, 0, 0, 0, 0],
		[180, 196, 213, 228, 245, 261, 279, 295, 312, 332, 348, 365, 382, 0, 0, 0, 0, 0, 0, 0],
		[183, 202, 218, 235, 253, 270, 287, 304, 322, 343, 359, 377, 0, 0, 0, 0, 0, 0, 0, 0],
		[201, 219, 239, 258, 277, 296, 316, 336, 354, 378, 396, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[206, 225, 245, 264, 284, 305, 325, 344, 364, 388, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[210, 231, 250, 271, 292, 312, 333, 353, 374, 398, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[216, 237, 258, 279, 300, 321, 342, 363, 383, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
	];

	getColor();
	getModel();
	let error = checkBoundories(modelCode, width, height);
	return printFinalPrice(error);

	//Receving Info from dropdown menu
	function getColor() {
		colorCode = colors.indexOf(color);
	}

	function getModel() {
		modelCode = models.indexOf(model);
	}

	function findPrizevut(arg) {
		let local = Math.round(Math.ceil(arg) / 10);
		//local = local / 10;
		local = local - 5;
		if (local < 0) {
			local = 0;
		}

		return local;
	}

	function checkBoundories(model, width, height) {
		switch (model) {
			case 0:
				if (width < 30 || height < 30 || width > 250 || height > 250) {
					return errMSG;
				} break;

			default:
				if (width < 30 || height < 30 || width > 300 || height > 300) {
					return errMSG;
				} break;
		}
	}

	function printFinalPrice(error) {
		if (error !== undefined) {
			return error
		}

		let discount = 6;	//precent discount

		width = findPrizevut(width);
		height = findPrizevut(height);

		switch (modelCode) {
			case 0:
				totalPrice = pvcOutsideRoller[height][width];
				break;

			case 1:
				totalPrice = alH39[height][width];
				break;

			case 2:
				totalPrice = alH39r[height][width];
				break;

			case 3:
				totalPrice = alH39r2vut[height][width];
				break;
		}

		if (modelCode >= 2) {
			totalPrice -= totalPrice * (discount / 100);
		}
		else {
			totalPrice -= totalPrice * (discount / 100);
		}

		if (totalPrice == 0) {
			return errMSG;
		}
		else {
			return totalPrice;
		}
	}
}

export default {
    calculate,
}
