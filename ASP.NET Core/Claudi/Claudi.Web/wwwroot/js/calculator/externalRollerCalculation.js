function calculate(model, color , width, height) {
	let models = ["PVC", "AL H-39", "AL H-39R"];
	let colors = ["Бял", "Кафяв"];
	let colorCode = 0;	//default color
	let modelCode = 0; // default model
	let totalPrice = 0;
	let errMSG = "Зададените размери са извън позволените габарити/площ  на щората."

	///////////AL-H39R/////////////

	let alH39 = [
		[139, 139, 139, 140, 149, 158, 168, 177, 186, 198, 208, 217, 226, 235, 245, 254, 266, 275, 285, 294, 303, 313, 322, 334, 343, 353],
		[139, 139, 139, 149, 159, 170, 180, 190, 200, 213, 223, 233, 243, 253, 263, 273, 286, 296, 306, 316, 326, 336, 347, 360, 370, 380],
		[139, 139, 148, 159, 170, 181, 192, 202, 213, 227, 238, 249, 260, 271, 282, 292, 306, 317, 328, 339, 350, 361, 371, 385, 396, 407],
		[139, 145, 157, 169, 180, 192, 204, 215, 227, 242, 253, 265, 277, 288, 300, 312, 326, 338, 350, 361, 373, 385, 396, 411, 423, 434],
		[141, 153, 166, 178, 191, 203, 216, 228, 240, 256, 268, 281, 293, 306, 318, 331, 346, 359, 371, 384, 396, 409, 421, 437, 449, 462],
		[148, 161, 174, 188, 201, 214, 228, 241, 254, 270, 284, 297, 310, 324, 337, 350, 366, 380, 393, 406, 419, 433, 446, 462, 476, 489],
		[155, 169, 183, 197, 211, 225, 239, 254, 268, 285, 299, 313, 327, 341, 355, 369, 386, 400, 415, 429, 443, 457, 471, 488, 502, 516],
		[162, 177, 192, 207, 222, 237, 252, 266, 281, 299, 314, 329, 344, 359, 374, 389, 406, 421, 436, 451, 466, 481, 496, 514, 529, 543],
		[169, 185, 201, 216, 232, 248, 263, 279, 295, 314, 329, 345, 361, 376, 392, 408, 426, 442, 458, 473, 489, 505, 521, 539, 555, 571],
		[183, 200, 217, 235, 252, 269, 286, 303, 320, 341, 358, 375, 392, 409, 426, 443, 464, 481, 498, 515, 532, 549, 567, 587, 604, 621],
		[190, 208, 226, 244, 262, 280, 298, 316, 334, 355, 373, 391, 409, 427, 445, 463, 484, 502, 520, 538, 555, 573, 591, 612, 630, 648],
		[197, 216, 235, 254, 272, 291, 310, 329, 348, 369, 388, 407, 426, 444, 463, 482, 504, 522, 541, 560, 579, 598, 616, 638, 657, 676],
		[205, 224, 244, 263, 283, 302, 322, 342, 361, 384, 403, 423, 442, 462, 482, 501, 524, 543, 563, 582, 602, 622, 641, 664, 683, 703],
		[212, 232, 252, 273, 293, 314, 334, 354, 375, 398, 418, 439, 459, 480, 500, 520, 544, 564, 584, 605, 625, 646, 666, 689, 710, 730],
		[219, 240, 261, 282, 304, 325, 346, 367, 388, 413, 434, 455, 476, 497, 518, 540, 564, 585, 606, 627, 649, 670, 691, 715, 736, 757],
		[226, 248, 270, 292, 314, 336, 358, 380, 402, 427, 449, 471, 493, 515, 537, 559, 584, 606, 628, 650, 672, 694, 716, 741, 763, 785],
		[233, 256, 279, 302, 324, 347, 370, 393, 415, 441, 464, 487, 510, 532, 555, 578, 604, 627, 649, 672, 695, 718, 741, 766, 789, 812],
		[246, 269, 293, 317, 341, 365, 389, 413, 437, 464, 488, 511, 535, 559, 583, 607, 634, 658, 682, 706, 730, 754, 777, 804, 0, 0],
		[253, 277, 302, 327, 352, 376, 401, 426, 450, 478, 503, 528, 552, 577, 602, 626, 654, 679, 704, 728, 753, 778, 0, 0, 0, 0],
		[260, 285, 311, 336, 362, 387, 413, 438, 464, 492, 518, 543, 569, 594, 620, 646, 674, 700, 725, 751, 776, 802, 0, 0, 0, 0],
		[267, 293, 320, 346, 372, 399, 425, 451, 478, 507, 533, 560, 586, 612, 638, 665, 694, 720, 747, 773, 0, 0, 0, 0, 0, 0],
		[274, 301, 328, 356, 383, 410, 437, 464, 491, 521, 548, 576, 603, 630, 657, 684, 714, 741, 768, 796, 0, 0, 0, 0, 0, 0],
		[281, 309, 337, 365, 393, 421, 449, 477, 505, 536, 564, 592, 619, 647, 675, 703, 734, 762, 0, 0, 0, 0, 0, 0, 0, 0],
		[288, 317, 346, 375, 403, 432, 461, 490, 518, 550, 579, 608, 636, 665, 694, 722, 754, 783, 0, 0, 0, 0, 0, 0, 0, 0],
		[296, 325, 355, 384, 414, 443, 473, 502, 532, 564, 594, 623, 653, 683, 712, 742, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[303, 333, 363, 394, 424, 454, 485, 515, 545, 579, 609, 640, 670, 700, 731, 761, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
	];

	///////////AL-H39R/////////////

	let alH39r = [
		[159, 159, 159, 159, 165, 175, 184, 193, 202, 215, 224, 233, 243, 252, 261, 270, 283, 292, 301, 311, 320, 329, 338, 351, 360, 369],
		[159, 159, 159, 165, 175, 186, 196, 206, 216, 229, 239, 249, 259, 269, 279, 289, 302, 312, 323, 333, 343, 353, 363, 376, 386, 396],
		[159, 159, 164, 175, 186, 197, 207, 218, 229, 243, 254, 265, 276, 287, 297, 308, 322, 333, 344, 355, 366, 376, 387, 401, 412, 423],
		[159, 161, 173, 184, 196, 208, 219, 231, 243, 257, 269, 280, 292, 304, 315, 327, 342, 353, 365, 377, 388, 400, 412, 426, 438, 450],
		[159, 169, 181, 194, 206, 219, 231, 243, 256, 271, 284, 296, 309, 321, 334, 346, 362, 374, 386, 399, 411, 424, 436, 452, 464, 477],
		[163, 177, 190, 203, 216, 230, 243, 256, 269, 286, 299, 312, 325, 339, 352, 365, 381, 395, 408, 421, 434, 448, 461, 477, 490, 504],
		[170, 184, 198, 212, 227, 241, 255, 269, 283, 300, 314, 328, 342, 356, 370, 384, 401, 415, 429, 443, 457, 471, 485, 502, 516, 530],
		[177, 192, 207, 222, 237, 252, 266, 281, 296, 314, 329, 344, 358, 373, 388, 403, 421, 436, 450, 465, 480, 495, 510, 528, 542, 557],
		[184, 200, 216, 231, 247, 263, 278, 294, 309, 328, 344, 359, 375, 391, 406, 422, 440, 456, 472, 487, 503, 519, 534, 553, 568, 584],
		[192, 208, 224, 241, 257, 274, 290, 306, 323, 342, 359, 375, 392, 408, 424, 441, 460, 477, 493, 509, 526, 542, 559, 578, 594, 611],
		[199, 216, 233, 250, 267, 285, 302, 319, 336, 356, 374, 391, 408, 425, 442, 460, 480, 497, 514, 531, 549, 566, 583, 603, 620, 638],
		[206, 224, 242, 260, 278, 296, 314, 332, 350, 371, 389, 407, 425, 443, 461, 479, 500, 518, 536, 554, 572, 590, 608, 629, 647, 665],
		[213, 231, 250, 269, 288, 307, 325, 344, 363, 385, 404, 422, 441, 460, 479, 498, 519, 538, 557, 576, 595, 613, 632, 654, 673, 691],
		[220, 239, 259, 278, 298, 318, 337, 357, 376, 399, 419, 438, 458, 477, 497, 516, 539, 559, 578, 598, 617, 637, 657, 679, 699, 718],
		[227, 247, 268, 288, 308, 329, 349, 369, 390, 413, 434, 454, 474, 495, 515, 535, 559, 579, 600, 620, 640, 661, 681, 704, 725, 745],
		[241, 263, 285, 307, 329, 351, 373, 395, 417, 442, 464, 486, 508, 530, 552, 573, 598, 620, 642, 664, 686, 708, 730, 755, 777, 799],
		[248, 271, 294, 317, 339, 362, 385, 408, 430, 456, 479, 502, 524, 547, 570, 592, 618, 641, 664, 686, 709, 732, 755, 780, 0, 0],
		[255, 279, 303, 326, 350, 373, 397, 420, 444, 470, 494, 517, 541, 564, 588, 611, 638, 661, 685, 708, 732, 755, 779, 806, 0, 0],
		[263, 287, 311, 335, 360, 384, 408, 433, 457, 484, 509, 533, 557, 582, 606, 630, 658, 682, 706, 731, 755, 779, 0, 0, 0, 0],
		[270, 295, 320, 345, 370, 395, 420, 445, 470, 499, 524, 549, 574, 599, 624, 649, 677, 702, 727, 753, 778, 803, 0, 0, 0, 0],
		[277, 303, 328, 354, 380, 406, 432, 458, 484, 513, 539, 565, 590, 616, 642, 668, 697, 723, 749, 775, 0, 0, 0, 0, 0, 0],
		[284, 310, 337, 364, 390, 417, 444, 471, 497, 527, 554, 580, 607, 634, 660, 687, 717, 743, 770, 797, 0, 0, 0, 0, 0, 0],
		[291, 318, 346, 373, 401, 428, 456, 483, 511, 541, 569, 596, 624, 651, 678, 706, 736, 764, 0, 0, 0, 0, 0, 0, 0, 0],
		[298, 326, 354, 383, 411, 439, 467, 496, 524, 555, 584, 612, 640, 668, 697, 725, 756, 785, 0, 0, 0, 0, 0, 0, 0, 0],
		[305, 334, 363, 392, 421, 450, 479, 508, 537, 569, 598, 628, 657, 686, 715, 744, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[312, 342, 372, 401, 431, 461, 491, 521, 551, 584, 613, 643, 673, 703, 733, 763, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
	];

	///////////PVC2/////////////

	let pvcOutsideRoller = [
		[129, 129, 129, 131, 139, 147, 155, 163, 171, 184, 192, 200, 208, 216, 224, 232, 245, 253, 261, 269],
		[129, 129, 130, 138, 147, 155, 164, 172, 181, 195, 203, 212, 221, 229, 238, 246, 260, 269, 277, 286],
		[129, 129, 136, 146, 155, 164, 173, 182, 192, 206, 215, 224, 233, 243, 252, 261, 275, 284, 294, 303],
		[129, 134, 143, 153, 163, 173, 182, 192, 202, 217, 227, 236, 246, 256, 266, 276, 291, 300, 310, 320],
		[130, 140, 150, 161, 171, 181, 192, 202, 213, 228, 238, 249, 259, 270, 280, 290, 306, 316, 327, 337],
		[135, 146, 157, 168, 179, 190, 201, 212, 223, 239, 250, 261, 272, 283, 294, 305, 321, 332, 343, 354],
		[141, 153, 164, 176, 187, 199, 210, 222, 234, 250, 262, 273, 285, 296, 308, 320, 336, 348, 359, 371],
		[147, 159, 171, 183, 195, 208, 220, 232, 244, 261, 273, 286, 298, 310, 322, 334, 352, 364, 376, 388],
		[152, 165, 178, 191, 203, 216, 229, 242, 255, 272, 285, 298, 311, 323, 336, 349, 367, 380, 392, 405],
		[164, 178, 192, 206, 220, 234, 248, 262, 276, 295, 309, 323, 337, 351, 365, 379, 398, 412, 426, 440],
		[170, 185, 199, 214, 228, 243, 258, 272, 287, 306, 321, 335, 350, 365, 379, 394, 413, 428, 0, 0],
		[176, 191, 206, 221, 237, 252, 267, 282, 297, 317, 333, 348, 363, 378, 393, 408, 429, 0, 0, 0],
		[182, 197, 213, 229, 245, 260, 276, 292, 308, 328, 344, 360, 376, 391, 407, 423, 0, 0, 0, 0],
		[187, 204, 220, 236, 253, 269, 285, 302, 318, 340, 356, 372, 389, 405, 0, 0, 0, 0, 0, 0],
		[193, 210, 227, 244, 261, 278, 295, 312, 329, 351, 368, 385, 401, 0, 0, 0, 0, 0, 0, 0],
		[199, 216, 234, 251, 269, 287, 304, 322, 339, 362, 379, 397, 414, 0, 0, 0, 0, 0, 0, 0],
		[205, 223, 241, 259, 277, 295, 313, 331, 350, 373, 391, 409, 0, 0, 0, 0, 0, 0, 0, 0],
		[215, 234, 253, 272, 291, 310, 329, 348, 367, 391, 410, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[221, 241, 260, 280, 299, 319, 339, 358, 378, 403, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[227, 247, 267, 287, 308, 328, 348, 368, 388, 414, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
		[232, 253, 274, 295, 316, 336, 357, 378, 399, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
	];

	getColor();
	getModel();
	let error = checkBoundories(modelCode, width, height);
	return printFinalPrice(error);

	//Receving Info from dropdown menu
	function getColor() {
		colorCode = colors.indexOf(color);
	}

	function getModel() {
		modelCode = models.indexOf(model);
	}

	function findPrizevut(arg) {
		let local = Math.round(Math.ceil(arg) / 10);
		//local = local / 10;
		local = local - 5;
		if (local < 0) {
			local = 0;
		}

		return local;
	}

	function checkBoundories(model, width, height) {
		switch (model) {
			case 0:
				if (width < 30 || height < 30 || width > 250 || height > 250) {
					return errMSG;
				} break;

			default:
				if (width < 30 || height < 30 || width > 300 || height > 300) {
					return errMSG;
				} break;
		}
	}

	function printFinalPrice(error) {
		if (error !== undefined) {
			return error
		}

		let discount = 6;	//precent discount

		width = findPrizevut(width);
		height = findPrizevut(height);

		switch (modelCode) {
			case 0:
				totalPrice = pvcOutsideRoller[height][width];
				break;

			case 1:
				totalPrice = alH39[height][width];
				break;

			case 2:
				totalPrice = alH39r[height][width];
				break;

			case 3:
				totalPrice = alH39r2vut[height][width];
				break;
		}

		if (modelCode >= 2) {
			totalPrice -= totalPrice * (discount / 100);
		}
		else {
			totalPrice -= totalPrice * (discount / 100);
		}

		if (totalPrice == 0) {
			return errMSG;
		}
		else {
			return totalPrice;
		}
	}
}

export default {
    calculate,
}
