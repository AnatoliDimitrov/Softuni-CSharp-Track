function calculate(model, color, width, height) {
	let colorCode = 0;	//default color
	let modelCode = 0; // default model
	let totalPrice = 0;
	
	let models = ["Ейша", "Феба"];
	let colors = ["J1", "J2", "J3", "J4", "J5", "J6",
		"B2", "B3", "B8", "B10", "D3", "D7", "D9", "D10", "D11",
		"B1", "B4", "B5", "B7", "B9", "B11", "B12", "B13", "D1", "D4", "D6", "D8",
		"B6", "D2", "D5"];

	let coeficientAsha = [1.00, 1.35, 1.75, 2.10];
	let coeficientFeba = [1.00, 1.00, 1.35, 1.75];

	let eishaTable = [
		[50, 52, 54, 56, 58, 60, 62, 64, 66, 70, 75, 81, 86, 91, 97, 102, 107, 113, 118, 123, 129],
		[50, 52, 54, 56, 58, 60, 62, 68, 75, 81, 87, 93, 99, 105, 112, 118, 124, 130, 136, 143, 149],
		[50, 52, 54, 56, 58, 64, 71, 78, 85, 92, 99, 106, 113, 120, 127, 134, 141, 148, 155, 162, 169],
		[50, 52, 54, 56, 63, 71, 79, 87, 95, 102, 110, 118, 126, 134, 142, 149, 157, 165, 173, 181, 189],
		[50, 52, 54, 61, 70, 78, 87, 96, 104, 113, 122, 130, 139, 148, 156, 165, 174, 182, 191, 200, 208],
		[50, 52, 57, 67, 76, 86, 95, 105, 114, 124, 133, 143, 152, 162, 171, 181, 190, 200, 209, 219, 228],
		[50, 52, 62, 73, 83, 93, 104, 114, 124, 135, 145, 155, 166, 176, 186, 197, 207, 217, 228, 238, 248],
		[50, 56, 67, 79, 90, 101, 112, 123, 134, 146, 157, 168, 179, 190, 201, 212, 224, 235, 246, 257, 268],
		[50, 60, 72, 84, 96, 108, 120, 132, 144, 156, 168, 180, 192, 204, 216, 228, 240, 252, 264, 276, 288],
		[52, 65, 77, 90, 103, 116, 129, 141, 154, 167, 180, 193, 206, 218, 231, 244, 257, 270, 282, 295, 308],
		[55, 69, 82, 96, 110, 123, 137, 151, 164, 178, 192, 205, 219, 232, 246, 260, 273, 287, 301, 314, 328],
		[58, 73, 87, 102, 116, 131, 145, 160, 174, 189, 203, 218, 232, 247, 261, 276, 290, 304, 319, 333, 348],
		[62, 77, 92, 108, 123, 138, 154, 169, 184, 199, 215, 230, 245, 261, 276, 291, 307, 322, 337, 353, 368],
		[65, 81, 97, 113, 130, 146, 162, 178, 194, 210, 226, 243, 259, 275, 291, 307, 323, 339, 355, 372, 388],
		[68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255, 272, 289, 306, 323, 340, 357, 374, 391, 408],
		[72, 90, 107, 125, 143, 161, 178, 196, 214, 232, 250, 267, 285, 303, 321, 339, 356, 374, 392, 410, 428],
		[75, 94, 112, 131, 149, 168, 187, 205, 224, 243, 261, 280, 299, 317, 336, 354, 373, 392, 410, 429, 448],
		[78, 98, 117, 137, 156, 176, 195, 215, 234, 253, 273, 292, 312, 331, 351, 370, 390, 409, 429, 448, 0],
		[82, 102, 122, 143, 163, 183, 203, 224, 244, 264, 285, 305, 325, 345, 366, 386, 406, 427, 447, 0, 0],
		[85, 106, 127, 148, 169, 191, 212, 233, 254, 275, 296, 317, 338, 359, 381, 402, 423, 444, 0, 0, 0],
		[88, 110, 132, 154, 176, 198, 220, 242, 264, 286, 308, 330, 352, 374, 396, 417, 439, 0, 0, 0, 0],
		[92, 114, 137, 160, 183, 205, 228, 251, 274, 297, 319, 342, 365, 388, 411, 433, 456, 0, 0, 0, 0]
	];

	let febaTable = [
		[69, 72, 74, 77, 79, 82, 84, 87, 89, 94, 101, 108, 116, 123, 130, 137, 144],
		[69, 72, 74, 77, 79, 82, 84, 93, 101, 109, 118, 126, 135, 143, 151, 160, 168],
		[69, 72, 74, 77, 79, 87, 96, 106, 115, 125, 134, 144, 153, 163, 173, 182, 192],
		[69, 72, 74, 77, 86, 97, 108, 119, 129, 140, 151, 162, 172, 183, 194, 205, 215],
		[69, 72, 74, 84, 96, 108, 120, 132, 144, 155, 167, 179, 191, 203, 215, 227, 239],
		[69, 72, 79, 92, 105, 118, 132, 145, 158, 171, 184, 197, 210, 223, 236, 249, 263],
		[69, 72, 86, 101, 115, 129, 143, 158, 172, 186, 200, 215, 229, 243, 258, 272, 286],
		[69, 78, 93, 109, 124, 140, 155, 171, 186, 202, 217, 232, 248, 263, 279, 294, 310],
		[69, 84, 100, 117, 134, 150, 167, 184, 200, 217, 234, 250, 267, 283, 300, 317, 333],
		[72, 90, 107, 125, 143, 161, 179, 197, 214, 232, 250, 268, 286, 304, 321, 339, 357],
		[77, 96, 115, 134, 153, 172, 191, 210, 229, 248, 267, 286, 305, 324, 343, 362, 381],
		[81, 101, 122, 142, 162, 182, 202, 223, 243, 263, 283, 303, 323, 344, 364, 384, 404],
		[86, 107, 129, 150, 171, 193, 214, 236, 257, 278, 300, 321, 342, 364, 385, 407, 428],
		[91, 113, 136, 158, 181, 203, 226, 249, 271, 294, 316, 339, 361, 384, 406, 429, 451],
		[95, 119, 143, 167, 190, 214, 238, 262, 285, 309, 333, 356, 380, 404, 428, 451, 475],
		[100, 125, 150, 175, 200, 225, 250, 275, 299, 324, 349, 374, 399, 424, 449, 474, 499],
		[105, 131, 157, 183, 209, 235, 261, 288, 314, 340, 366, 392, 418, 444, 470, 496, 522],
		[110, 137, 164, 191, 219, 246, 273, 301, 328, 355, 382, 410, 437, 464, 491, 519, 546],
		[114, 143, 171, 200, 228, 257, 285, 314, 342, 370, 399, 427, 456, 484, 513, 541, 570],
		[119, 149, 178, 208, 238, 267, 297, 327, 356, 386, 415, 445, 475, 504, 534, 564, 593],
		[124, 155, 185, 216, 247, 278, 309, 340, 370, 401, 432, 463, 494, 524, 555, 586, 617],
		[128, 161, 193, 225, 256, 289, 321, 353, 384, 417, 449, 481, 512, 545, 577, 609, 640]
	];

	getColor();
	getModel();
	let error = CheckBoundories(modelCode, width, height);
	return printFinalPrice(error);

	function getColor() {
		colorCode = colors.indexOf(color);
	}

	function getModel() {
		modelCode = models.indexOf(model);
	}

	function convertSize(arg) {
		let local = Math.round(Math.ceil(arg) / 10);

		local = local - 4;

		if (local < 0) {
			local = 0;
		}

		return local;
	}

	function CheckBoundories(model, width, height) {
		let errMSG = "Зададените размери са извън позволената ширина/височина на продукта";
		let J1ErrEisha = "За бамбук J1, J2, J3, J4, J5 и J6 (за система Ейша) максималната ширина е 200 см.";
		let B3ErrEisha = "За бамбук B3, B4, B5 и B6 (за система Ейша) максималната височина е 200 см.";
		let J1ErrFeba = "За бамбук J2, J5 и J6 (система Феба) максималната ширина е 180 см.";
		let B3ErrFeba = "За бамбук B3, B4, B5, ,B6, B7, B13 и D4 (система Феба) максималната ширина е 180 см.";
		let sqrtMeters = width * height / 10000;

		switch (model) {
			case 0:
				if (width > 240 || width < 35 || height > 250 || height < 40 || sqrtMeters > 5) {
					return errMSG;
				}
				else if (colorCode < 6) {
					if (width > 180) {
						return J1ErrEisha;
					}
				}
				else if (colorCode == 7 || colorCode == 16 || colorCode == 17 || colorCode == 18) {
					if (height > 200) {
						return B3ErrEisha;
					}
				}
				break;

			case 1:
				if (width > 200 || width < 35 || height > 250 || height < 40 || sqrtMeters > 4) {
					return errMSG;
				}
				else if (colorCode == 1 || colorCode == 4 || colorCode == 5) {
					if (width > 200) {
						return J1ErrFeba;
					}
				}
				else if (colorCode == 7 || colorCode == 16 || colorCode == 17 || colorCode == 18 || colorCode == 22 || colorCode == 24) {
					if (width > 200) {
						return B3ErrFeba;
					}
				} break;
		}
	}

	function printFinalPrice(error) {
		if (error !== undefined) {
			return error;
		}

		let discount = 6;	//precent discount
		let colorGroup = 0;
		let colorExeptionMSG = "Бамбук J1, J2, J3, J4, J5 и J6 не може да се изпълняват със система Феба.";

		CheckBoundories(modelCode, width, height);

		width = convertSize(width);
		height = convertSize(height);

		switch (modelCode) {
			case 0:
				totalPrice = eishaTable[height][width];
				break;

			case 1:
				totalPrice = febaTable[height][width];

				if (colorCode == 0 || colorCode == 1 || colorCode == 2 || colorCode == 3 || colorCode == 4 || colorCode == 5) {
					alert(colorExeptionMSG);
				} break;
		}

		if (colorCode > 26) {
			colorGroup = 3;
		}
		else if (colorCode > 14) {
			colorGroup = 2;
		}
		else if (colorCode > 5) {
			colorGroup = 1;
		}
		else {
			colorGroup = 0;
		}
		if (modelCode == 0) {
			totalPrice *= coeficientAsha[colorGroup];
		} else {
			totalPrice *= coeficientFeba[colorGroup];
		}
		totalPrice -= totalPrice * (discount / 100);

		return totalPrice;
	}
}

export default {
    calculate,
}