function calculate(model, color, width, height) {
	let colorCode = 0;	//default color
	let modelCode = 0; // default model
	let totalPrice = 0;

	let models = ["BB 10", "BB 15", "BB 30", "AO 10", "AO 30", "AO 70", "BF 50", "BF 51",
		"BB 20", "BB 24", "AO 20", "BO 10", "BO 75", "BB 40", "AO 40"];

	let colors = [
		"Crepe FR",
		"Tendence",
		"Flush",
		"Venezia", //group 0 from 0 - 3

		"Crepe Topar FR",
		"Juno",
		"Crush Pearl FR",
		"Porto",
		"Blossom",//group 1 from 4 - 8

		"Shade",
		"California",
		"Onda",
		"Scala BO Color", //group 2 from 9 - 12

		"Strata",
		"Crush DustBlock",
		"Attia",
		"Georgette",
		"Duette Unix Duotone", //group3 from 13 - 17

		"Crush Topar Plus",
		"Duette Classic 25mm BO", //group 4 from 18 - 19

		"Ardeche",
		"Duette Fixe 25mm BO",
		"Duette Montana 25mm BO"];//group 5 from 20 - 22

	let pliseTable10 = [
		[59, 65, 74, 83, 90, 98, 105, 113, 123, 128, 139, 145, 151, 161, 173, 177, 185, 193, 202],
		[59, 67, 74, 83, 91, 107, 113, 123, 133, 140, 145, 153, 164, 173, 178, 188, 198, 205, 211],
		[67, 74, 83, 91, 100, 107, 115, 133, 140, 147, 157, 164, 174, 180, 198, 207, 213, 218, 232],
		[67, 75, 83, 100, 108, 115, 125, 140, 147, 157, 166, 175, 189, 199, 208, 222, 233, 241, 247],
		[67, 83, 91, 100, 108, 125, 134, 141, 157, 166, 175, 189, 199, 208, 224, 233, 241, 248, 265],
		[75, 84, 92, 108, 117, 126, 141, 149, 159, 176, 184, 190, 209, 215, 234, 242, 249, 265, 275],
		[75, 84, 100, 108, 120, 135, 142, 159, 167, 184, 193, 202, 215, 225, 243, 250, 266, 276, 293],
		[75, 92, 101, 117, 126, 142, 150, 167, 177, 193, 202, 216, 228, 243, 250, 268, 278, 293, 301],
		[76, 92, 101, 120, 127, 142, 160, 172, 185, 197, 210, 218, 239, 251, 263, 278, 289, 302, 313],
		[84, 92, 109, 120, 138, 150, 161, 177, 197, 205, 218, 232, 247, 263, 273, 289, 307, 314, 328],
		[84, 101, 109, 127, 143, 160, 173, 185, 198, 211, 232, 247, 255, 274, 289, 299, 314, 332, 341],
		[86, 101, 120, 138, 143, 161, 178, 197, 207, 222, 240, 255, 274, 282, 299, 315, 332, 342, 360],
		[86, 103, 122, 138, 151, 173, 178, 198, 213, 233, 248, 257, 275, 292, 310, 325, 342, 351, 367],
		[93, 109, 122, 139, 153, 174, 188, 207, 222, 241, 257, 265, 292, 300, 316, 335, 351, 368, 385],
		[93, 110, 128, 145, 164, 180, 198, 213, 233, 248, 265, 276, 300, 316, 335, 351, 368, 377, 397],
		[93, 110, 128, 145, 164, 180, 199, 214, 234, 249, 266, 284, 311, 327, 336, 363, 378, 390, 405],
		[103, 122, 139, 153, 174, 189, 208, 224, 242, 258, 276, 295, 317, 336, 352, 370, 390, 405, 424],
		[103, 122, 139, 153, 175, 199, 214, 234, 250, 268, 285, 302, 327, 348, 364, 380, 399, 425, 442],
		[103, 123, 140, 164, 180, 201, 215, 242, 260, 278, 295, 313, 338, 357, 372, 393, 415, 433, 0],
		[105, 128, 145, 166, 182, 209, 225, 243, 260, 285, 302, 320, 348, 366, 382, 409, 427, 445, 0],
		[110, 133, 147, 175, 190, 215, 236, 250, 273, 295, 314, 332, 359, 374, 401, 416, 435, 0, 0],
		[110, 133, 147, 175, 190, 215, 239, 251, 280, 298, 320, 341, 360, 384, 402, 428, 0, 0, 0]
	];

	let pliseTable20 = [
		[75, 90, 98, 105, 122, 127, 135, 149, 158, 166, 173, 188, 197, 209, 215, 224, 240, 247, 255],
		[83, 91, 98, 111, 123, 135, 142, 149, 159, 174, 178, 189, 205, 210, 225, 233, 247, 257, 263],
		[83, 91, 107, 111, 127, 138, 150, 159, 167, 180, 189, 205, 211, 227, 234, 248, 257, 264, 278],
		[84, 98, 107, 123, 128, 142, 159, 167, 175, 190, 205, 211, 227, 236, 248, 264, 274, 289, 295],
		[91, 100, 113, 123, 138, 150, 160, 175, 180, 198, 211, 222, 236, 249, 260, 274, 289, 297, 311],
		[91, 107, 113, 128, 139, 153, 168, 175, 190, 207, 213, 228, 243, 250, 266, 282, 298, 302, 317],
		[91, 107, 123, 128, 143, 160, 175, 182, 199, 213, 223, 239, 250, 266, 276, 292, 307, 320, 330],
		[100, 108, 124, 139, 153, 168, 176, 191, 208, 223, 239, 245, 261, 276, 292, 307, 320, 330, 343],
		[100, 113, 124, 139, 153, 168, 182, 201, 208, 232, 240, 255, 268, 283, 299, 314, 330, 336, 351],
		[100, 113, 133, 145, 161, 176, 191, 201, 214, 232, 247, 263, 277, 293, 309, 325, 338, 357, 368],
		[100, 115, 133, 145, 161, 184, 193, 209, 224, 240, 257, 273, 293, 300, 315, 338, 357, 364, 377],
		[108, 124, 139, 157, 172, 184, 201, 215, 233, 247, 263, 278, 300, 316, 333, 348, 364, 378, 397],
		[108, 124, 140, 157, 172, 193, 209, 224, 241, 257, 273, 289, 301, 327, 341, 359, 370, 390, 402],
		[108, 125, 140, 164, 177, 193, 210, 233, 248, 264, 278, 297, 316, 334, 349, 365, 390, 402, 418],
		[115, 133, 145, 164, 188, 202, 215, 234, 257, 274, 289, 302, 327, 342, 360, 380, 398, 413, 430],
		[115, 133, 147, 172, 188, 210, 225, 241, 258, 280, 297, 313, 334, 350, 366, 391, 403, 424, 442],
		[115, 134, 157, 173, 197, 210, 227, 248, 265, 290, 302, 317, 342, 361, 374, 399, 424, 436, 452],
		[115, 140, 158, 177, 197, 216, 234, 258, 275, 297, 313, 328, 350, 374, 393, 413, 432, 445, 468],
		[125, 140, 158, 178, 205, 216, 242, 260, 275, 298, 320, 335, 361, 376, 400, 425, 438, 464, 0],
		[125, 140, 164, 188, 205, 227, 249, 265, 282, 307, 330, 343, 367, 393, 408, 433, 455, 470, 0],
		[125, 147, 166, 189, 211, 236, 249, 275, 292, 314, 336, 351, 376, 400, 415, 447, 465, 0, 0],
		[125, 147, 173, 189, 211, 236, 260, 276, 299, 325, 336, 363, 384, 401, 427, 448, 0, 0, 0]
	];

	let Coeficient = [1.00, 1.10, 1.30, 1.40, 1.60, 2.10];

	getColor();
	getModel();
	let error = checkBoundories();
	return printFinalPrice(error);

	function getColor() {
		colorCode = colors.indexOf(color);
	}

	function getModel() {
		modelCode = models.indexOf(model);
	}

	function convertSize(arg) {
		let local = Math.round(Math.ceil(arg) / 10);

		local = local - 4;

		if (local < 0) {
			local = 0;
		}
		return local;
	}

	function checkBoundories() {
		if (width > 220 || width < 20 || height > 250 || height < 20) {
			return "Зададените размери са извън позволената ширина/височина на продукта";
		}
	}

	function printFinalPrice(error) {
		if (error !== undefined) {
			return error
		}

		let errMSG = "Зададените размери са извън позволената ширина/височина на продукта";
		let discount = 6;	//precent discount

		checkBoundories(modelCode, width, height);

		width = convertSize(width);
		height = convertSize(height);

		if (modelCode < 8) {
			totalPrice += pliseTable10[height][width];
			if (totalPrice == 0) {
				return errMSG;
			}
		}
		else {
			totalPrice += pliseTable20[height][width];
			if (totalPrice == 0) {
				return errMSG;
			}
		}

		let group;
		switch (colorCode) {
			case 0:
			case 1:
			case 2:
			case 3:
				group = 0;
				break

			case 4:
			case 5:
			case 6:
			case 7:
			case 8:
				group = 1;
				break

			case 9:
			case 10:
			case 11:
			case 12:
				group = 2;
				break

			case 13:
			case 14:
			case 15:
			case 16:
			case 17:
				group = 3;
				break

			case 18:
			case 19:
				group = 4;
				break

			case 20:
			case 21:
			case 22:
				group = 5;
				break

			default:
				group = 7;
				break
		}

		totalPrice *= Coeficient[group];

		totalPrice -= totalPrice * (discount / 100);

		return totalPrice;
	}
}

export default {
    calculate,
}